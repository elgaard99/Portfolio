@page "/"
@using BlazorBootstrap
@using Microsoft.VisualBasic
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<div class="container mt-5 bg-dark text-light p-4 rounded">
    <header class="mb-5 text-center">
        <h1 class="display-4 fw-bold">Portefølje for 4. semester</h1>
        <p class="lead text-secondary">Dette er en hjemmeside til at følge min udvikling indenfor IT-sikkerhed og DevOps</p>
    </header>

    <div class="row">
        <!-- Blog list -->
        <div class="col-md-4">
            <div class="list-group">
                @foreach (var post in BlogPosts.OrderByDescending(p => p.PublishDate))
                {
                    var isActive = SelectedPost?.Id == post.Id;
                    <button class="list-group-item list-group-item-action 
                                   @(isActive ? "active bg-primary text-white border-primary" : "bg-secondary text-light border-secondary")"
                            @onclick="() => SelectPost(post)">
                        <div class="d-flex w-100 justify-content-between">
                            <h5 class="mb-1">@post.Title</h5>
                            <small>@post.PublishDate.ToString("MMM dd, yyyy")</small>
                        </div>
                        <p class="mb-1 text-muted">@post.Summary</p>
                    </button>
                }
            </div>
        </div>

        <!-- Selected blog content -->
        <div class="col-md-8">
            @if (SelectedPost is not null)
            {
                <div class="card bg-secondary text-light shadow-sm border-primary">
                    <div class="card-body">
                        <h2 class="card-title">@SelectedPost.Title</h2>
                        <p class="text-muted">@SelectedPost.PublishDate.ToString("MMMM dd, yyyy")</p>
                        <p class="card-text">@SelectedPost.Content</p>
                    </div>
                </div>
            }
            else
            {
                <div class="card bg-secondary text-light border-secondary">
                    <div class="card-body text-muted">
                        Vælg et indlæg fra listen for at se det her.
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<style>
    .list-group-item {
        transition: background-color 0.2s ease, color 0.2s ease;
    }
    .list-group-item:hover {
        background-color: #444 !important;
        color: white !important;
    }
</style>

@code {
    public record BlogPost(int Id, string Title, string Summary, string Content, DateTime PublishDate);

    List<BlogPost> BlogPosts = new()
    {
        new(1, "Uge 33", "Projektopstart og start på portefølje",
            "I denne uge har fokus været på at komme godt i gang med porteføljen og projekt. ft. projekt var fokus på at få en bedre forståelse af virksomheden og domænet. Vi har derfor arbejdet med business case, BMC og BPMN, samt fået lavet en objektmodel og domænemodel. Derudover fik vi opsat et kanban-board med definition of done til de enkelte koloner og sat de første tickets i backloggen.\nDet hjalp mig også til at finde mine første mål indenfor mine to områder - cloud-computing, devops (CI/CD) og it-sikkerhed. Indenfor CI/CD fik jeg til opgave at opsætte en pipeline, hvilket jeg løste med Github Actions. Jeg skulle også finde en måde at hoste vores webapp på, og her faldt jeg over infrastructure as code (IaC) og Terraform, der kan hjælpe med at vedligeholde og versionere vores infrastruktur.\nEfter at være gået i gang med Terraform, fandt jeg ud at der er temmelig mange kodeord og nøgler at holde styr på - og ikke mindst skjult, samtidig med at vi alle har adgang til dem.\nSå mine to mål er: 1. At blive komfortable med Terraform (evt. udvide med Ansible), og 2. At finde en måde at håndtere passwords på.",
            new DateTime(2025, 8, 17)),
        new(2, "Uge 34", "HashiCorp Vault og ZeroTrust",
            "Denne uge er gået med at få opsat på HashiCorps Vault, der skal tage sig af vores nøgler og logins, samt opsat roller hertil der skal gøre det nemt at administrere, hvem der har adgang til hvad. Til det er ZeroTrust ideelt da det handler om verificer eksplicit, least privileged og assume breach. Nu mangler bare en at få styr på auditing, så vi kan se, hvem der har til gået hvad og hvornår, samt lavet en backup plan, hvis uheldet skulle være ude. På den måde har vi nogle information at gå ud fra, hvis en konto skulle være blevet hacket, og en backup til at komme hurtigt online igen.\nNæste skridt er mere i devops retningen. Vi er nemlig kommet godt i gang med kodningen, og allerede nu har vi udfordringer med at vi alle skal have en database der up to date og ens. Derfor vil jeg kigge mere ind i at få sat et udviklings-miljø op.",
            new DateTime(2025, 8, 24)),
        // new(3, "Using Components Effectively", "Tips and best practices for reusable Blazor components.",
        //     "Components are the building blocks of Blazor applications. This article covers patterns for building reusable and maintainable components...",
        //     DateTime.Now.AddDays(-2))
    };

    BlogPost? SelectedPost;

    protected override void OnInitialized()
    {
        // Default to latest post
        SelectedPost = BlogPosts.OrderByDescending(p => p.PublishDate).FirstOrDefault();
    }

    void SelectPost(BlogPost post)
    {
        SelectedPost = post;
    }
}
