@inject YamlLocalizationService LocalizationService
@inject ILogger<NavigationManager> Logger

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Portfolio</a>
    </div>
</div>

<input type="checkbox" title="Navigation menu" class="navbar-toggler"/>

<div class="nav-scrollable" onclick="document.querySelector('.navbar-toggler').click()">
    <nav class="nav flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="about-me" Match="NavLinkMatch.All">
                <span aria-hidden="true"><i class="bi bi-person-fill" style="font-size: 1rem; color: white;"></i></span> @GetValue("AboutMe")
            </NavLink>
        </div>

        <div class="nav-item px-3">
            <NavLink class="nav-link" href="experience" Match="NavLinkMatch.All">
                <span aria-hidden="true"><i class="bi bi-briefcase-fill" style="font-size: 1rem; color: white;"></i></span> @GetValue("Experience")
            </NavLink>
        </div>
        
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="skills" Match="NavLinkMatch.All">
                <span aria-hidden="true"><i class="bi bi-tools" style="font-size: 1rem; color: white;"></i></span> @GetValue("Skills")
            </NavLink>
        </div>
    </nav>
</div>

@code
{
    private Dictionary<string, string> _translations = new();

    private string GetValue(string key)
    {
        string value = "";
        try
        {
            value = @_translations[key];
        }
        catch (Exception e)
        {
            Logger.LogError($"Key: '{key}', was not found in translations");
        }

        return value;
    }
    
    protected override void OnInitialized()
    {
        LocalizationService.LanguageChanged += OnLanguageChanged;
    }

    private void OnLanguageChanged()
    {
        _translations = LocalizationService.SystemTranslations("NavigationManager");
        InvokeAsync(StateHasChanged); // refresh UI
    }

    protected override async Task OnParametersSetAsync()
    {
        await LocalizationService.LoadSystemTranslations();
        _translations = LocalizationService.SystemTranslations("NavigationManager");

        await base.OnParametersSetAsync();
    }

    public void Dispose()
    {
        LocalizationService.LanguageChanged -= OnLanguageChanged;
    }
}
