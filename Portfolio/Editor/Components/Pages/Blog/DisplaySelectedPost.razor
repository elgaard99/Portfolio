@inject MinioService MinioService

<!-- Selected blog content -->
<div class="col-md-8">
    @if (SelectedPost != null)
    {
        <div class="card bg-secondary text-light shadow-sm border-primary">
            <div class="card-body">
                <h2 class="card-title">@SelectedPost.Title</h2>
                <p class="text-muted">
                    @SelectedPost.PublishDate.ToString("MMMM dd, yyyy"), 
                    Mål: @SelectedPost.Goal
                </p>
                <p class="card-text">@SelectedPost.Content</p>

                @if (SelectedPost.Photos != null && SelectedPost.Photos.Any())
                {
                    <div class="mt-3 d-flex flex-wrap gap-3">
                        @foreach (var photo in SelectedPost.Photos)
                        {
                            <div class="photo-container text-center">
                                <img src="@GetPhotoUrl(photo).Result"
                                     alt="@photo.Description"
                                     class="img-fluid rounded border border-primary shadow-sm"
                                     style="max-width: 500px; height: auto;" />
                                @if (!string.IsNullOrWhiteSpace(photo.Description))
                                {
                                    <p class="mt-2 text-light small">@photo.Description</p>
                                }
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
        <div class="mt-4">
            <span class="badge @(SelectedPost.IsVisible ? "bg-success" : "bg-secondary")">
                @(SelectedPost.IsVisible ? "Visible" : "Hidden")
            </span>
        </div>
    }
    else
    {
        <div class="card bg-secondary text-light border-secondary">
            <div class="card-body text-muted">
                Vælg et indlæg fra listen for at se det her.
            </div>
        </div>
    }
</div>
@code
{
    [Parameter]
    public BlogPost SelectedPost { get; set; }
    
    async Task<string?> GetPhotoUrl(Photo photo)
    {
        return await MinioService.GetPhotoUrlAsync(photo);
    }
}
